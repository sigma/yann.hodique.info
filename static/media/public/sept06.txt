#! /bin/bash

##############
# Question 1
#

# find $1 -name "*.mp3" | (while read file; do mv "$file" `echo $file | sed 's/ /_/g'` &> /dev/null; done)

##############
# Question 2
#

# "[0-9]{2}/[0-9]{2}/[0-9]{4}"

##############
# Question 3
#

# sed 's:\([0-9]\{2\}\)/\([0-9]\{2\}\)/\([0-9]\{4\}\):\2/\1/\3:g'

##############
# Question 4
#

function februaryNumber () {
    if [ `expr $1 % 400` -eq 0 ]; then
        echo 29
        return
    fi
    if [ `expr $1 % 100` -eq 0 ]; then
        echo 28
        return
    fi
    if [ `expr $1 % 4` -eq 0 ]; then
        echo 29
        return
    fi
    echo 28
}

function validateDate () {
    def=$1/$2/$3
    case $2 in
        "01"|"03"|"05"|"07"|"08"|"10"|"12")
            if [ $1 -gt 31 ]; then
                echo $def
                return
            fi
            ;;
        "02")
            max=`februaryNumber $3`
            if [ $1 -gt $max ]; then
                echo $def
                return
            fi
            ;;
        *)
            if [ $1 -gt 30 ]; then
                echo $def
                return
            fi
            ;;

    esac
    echo $2/$1/$3
}

function changeDate () {
    echo $1 | sed 's:/: :g' | (read jj mm yyyy; validateDate $jj $mm $yyyy)
}

function modifyLine () {
    for word in "$@"; do
        tmp=`echo "$word" | egrep -v "[0-9]{2}/[0-9]{2}/[0-9]{4}"`
        if [ -z "$tmp" ] ; then
            word=`changeDate "$word"`
        fi
        res="$res$word"
    done
    echo "$res"
}

function analyzeLine () {
    echo "$1" | sed 's:\([0-9]\{2\}\)/\([0-9]\{2\}\)/\([0-9]\{4\}\):" \1/\2/\3 ":g' \
        | sed -e 's/"/\\\\"/g' -e 's/^/"/' -e 's/$/"/' \
        | (while read l; do eval set "$l"; eval modifyLine "$@"; done)
}

sed -e 's/"/\\\\"/g' -e 's/^/"/' -e 's/$/"/' | (while read line; do analyzeLine "$line"; done)
